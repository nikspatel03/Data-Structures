
public class BST {
	
	BstNode root;
	
	
	public BST(){
		
		root = null;
		
	}
	
	
	public void insert(int data){
		
		
		root = insert(root,data);
		
		
	}
	
	
	
	public BstNode insert(BstNode node , int data){
		
		if(node == null){
			
			node = new BstNode(data);
			
		}
		else if(data <= node.data){
			
			node.left = insert(node.left,data);
		
		}
		else{
			
			node.right = insert(node.right,data);
		}
		
		return node;
		
		
	}
	
	
	public boolean search(int data){
		
		
		return search(root,data);
		
	}
	
	public boolean search(BstNode root , int data){
		
		if(root == null){
			return false;
		}
		else if(root.data == data){
			return true;
		}
		else if(data <= root.data){
			return search(root.left,data);
			
		}
		else
			return search(root.right,data);
	}
	
	
	
	public int findMin(){
		
		return findMin(root);
		

	}
	
	public int findMin(BstNode root1){
		
		if(root1 == null){
			System.out.println("Error");
			return -1;
		}
		else if(root1.left == null){
			return root1.data;
		}
		
		return findMin(root1.left);
		

		}
		
public int findMax(BstNode root2){
		
		if(root2 == null){
			System.out.println("Error");
			return -1;
		}
		else if(root2.right == null){
			return root2.data;
		}
		
		return findMin(root2.right);
		

		}
		
		
	}



